name: Build Padavan RM2100

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/hanwckf/rt-n56u
  REPO_BRANCH: master
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  Build_Targets: RM2100
  CONFIG_FILE: RM2100.config
  DIY_SH: DIY-RM2100.sh

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Prepare environment
      run: |
       sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
       sudo -E apt-get -qq update
       sudo -E apt-get -qq install libtool-bin gperf python3-docutils autopoint gettext zip
       sudo -E apt-get -qq autoremove --purge
       sudo -E apt-get -qq clean
       sudo timedatectl set-timezone "Asia/Shanghai"
    - name: Clone source
      if: (!cancelled())
      run: |
       df -hT $PWD
       git clone --depth=1 $REPO_URL -b $REPO_BRANCH /opt/rt-n56u
    - name: Load custom configuration
      run: |
        mv -f $CONFIG_FILE /opt/rt-n56u/trunk/configs/templates/$Build_Targets.config
        chmod +x $DIY_SH
        cd /opt/rt-n56u
        $GITHUB_WORKSPACE/$DIY_SH
    - name: Download toolchain
      if: (!cancelled())
      run: |
       cd /opt/rt-n56u/toolchain-mipsel
       sh dl_toolchain.sh
    - name: Compile the firmware
      if: (!cancelled())
      id: compile
      run: |
        cd /opt/rt-n56u/trunk
        fakeroot ./build_firmware_modify $Build_Targets
        echo "::set-output name=status::success"
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: Padavan_firmware_${{ env.Build_Targets }}_${{ env.FILE_DATE }}
        path: /opt/rt-n56u/trunk/images
